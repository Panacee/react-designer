{"version":3,"sources":["designer/components/Toolbar.js","designer/constants/settings.js","designer/components/Transformer.js","designer/components/hocs/withElementHandlers.js","designer/components/elements/Rectangle.js","designer/components/elements/elementProps.js","designer/components/elements/Circle.js","designer/components/elements/Text.js","designer/constants/fonts.js","designer/components/Background.js","designer/components/elements/Image.js","designer/utils/qr.js","designer/components/elements/Qr.js","designer/components/Canvas.js","designer/components/elements/Curve.js","designer/components/settings/StyledSettingsComponents.js","designer/components/settings/Row.js","designer/components/context/CurrentContext.js","designer/components/settings/ColorPicker.js","designer/components/settings/ImageLoader.js","designer/components/settings/Checkbox.js","designer/components/settings/Range.js","designer/components/settings/BackgroundPanel.js","designer/components/settings/Input.js","designer/components/settings/SizePanel.js","designer/components/settings/RemovePanel.js","designer/components/settings/ColorPanel.js","designer/components/context/OrderContext.js","designer/components/settings/OrderPanel.js","designer/components/settings/Select.js","designer/components/settings/Textarea.js","designer/components/settings/TextPanel.js","designer/components/hocs/withCurrentContext.js","designer/components/settings/ImagePanel.js","designer/constants/globalCompositeOperations.js","designer/components/settings/OverlayPanel.js","designer/components/settings/LinkPanel.js","designer/components/context/AnchorsEditableContext.js","designer/components/settings/AnchorsPanel.js","designer/components/settings/AnchorPanel.js","designer/components/settings/SettingsPanel.js","designer/components/Designer.js","designer/index.js","App.js","index.js"],"names":["Container","styled","div","_templateObject","IconWrapper","_templateObject2","_ref","hover","_ref2","Elements","_templateObject3","_ref3","_ref4","ELEMENTS","type","icon","faFont","faSquare","faCircle","faBezierCurve","faImage","faQrcode","Toolbar","state","getSelectedIcon","selected","_this","props","find","propEq","onMouseEnter","setState","onMouseLeave","onSelect","this","react_default","a","createElement","onClick","index_es","faCog","faPlus","map","element","key","Component","DEFAULT_SETTINGS","rect","width","height","fill","stroke","strokeWidth","rotation","circle","curve","anchors","close","text","fontSize","align","fontStyle","fontFamily","image","qr","TRANSFORM_SETTINGS","resizeEnabled","rotateEnabled","enabledAnchors","Transformer","checkNode","current","selectedNode","transformer","getStage","findOne","concat","name","node","attachTo","detach","getLayer","batchDraw","forceUpdate","_this2","ReactKonva","Object","assign","ref","rotationSnaps","keepRatio","defaultProps","withElementHandlers","WrappedComponent","_Component","ElementHandlers","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","getUpdatedAnchors","x","y","headAnchor","head","xDifference","yDifference","objectSpread","onDragMove","e","_this$props","onChange","target","onTransform","_this$props2","currentTarget","scaleX","scaleY","showHelper","Math","ceil","getHelperWidth","getHelperHeight","inherits","createClass","value","helperWidth","helperHeight","PropTypes","object","func","bool","number","react","opacity","draggable","redraw","setTimeout","layer","draw","prev","FONTS","label","Background","setImage","window","Image","src","settings","background","onload","getProps","naturalWidth","naturalHeight","modifiedHeight","modifiedWidth","equals","pattern","fillPatternImage","fillPatternScaleX","patternScale","fillPatternScaleY","convertStr","str","out","i","charcode","charCodeAt","String","fromCharCode","sceneFunc","context","shape","cells","qrcode","link","modules","numCells","scale","fillStyle","fillRect","forEach","row","rdx","cell","cdx","beginPath","closePath","fillStrokeShape","Text","Rectangle","Circle","_this$props$element","_this$props$element$a","grouped","reduce","res","cur","lastIsArray","is","last","bezier","any","isCurve","lastAnchor","push","toConsumableArray","dropLast","anchor","points","unnest","aX","aY","lineTo","quadraticCurveTo","bezierCurveTo","moveTo","Qr","Canvas","handleStageMouseDown","onChangeCurrent","elements","selectedType","onAddElement","onAddAnchor","anchorsEditable","evt","layerX","layerY","getParent","className","attrs","replace","renderElement","onChangeCurrentElement","getElementsWithAnchors","filter","has","onDragAnchor","index","update","renderAnchors","_this$props3","onChangeCurrentAnchor","currentAnchor","pathEq","onDragStart","renderAnchorBorder","show","WebFont","load","google","families","classes","_this$props4","elementsWithAnchors","onMouseDown","Background_Background","Transformer_Transformer","Panel","StyledSettingsComponents_templateObject","PanelButton","button","StyledSettingsComponents_templateObject2","Small","StyledSettingsComponents_templateObject3","Row_templateObject","Column","Row_templateObject2","Label","span","Row_templateObject3","Row","children","Row_Container","CurrentContext","createContext","MainContainer","ColorPicker_templateObject","ColorPicker_templateObject2","Swatch","ColorPicker_templateObject3","color","PickerWrapper","_templateObject4","ColorPicker","opened","toggle","rgb","prop","r","g","b","renderPicker","onChangeProp","onChangeSettingsProp","item","ColorPicker_Container","build_default","onClickOutside","lib","context_CurrentContext","Consumer","FileInput","input","ImageLoader_templateObject","ImageLoader","reader","FileReader","onLoad","fn","file","files","readAsDataURL","result","renderLoader","removable","accept","Checkbox","renderCheckbox","checked","Range","renderRange","min","max","step","Number","BackgroundPanel","StyledSettingsComponents_Panel","Row_Row","ImageLoader_ImageLoader","ColorPicker_ColorPicker","Checkbox_Checkbox","Range_Range","StyledInput","Input_templateObject","Input","isNumber","format","val","formated","getValue","parse","isNil","small","Inputs","SizePanel_templateObject","SizePanel","disabledProp","path","parseWidth","_current$scaleX","abs","round","isNaN","formatWidth","_current$scaleX2","parseHeight","_current$scaleY","formatHeight","_current$scaleY2","onChangeX","onChangeY","Input_Input","RemovePanel","onRemove","StrokeContainer","ColorPanel_templateObject","ColorPanel","OrderContext","Item","OrderPanel_templateObject","DoubleUp","DoubleDown","Up","Down","OrderPanel","context_OrderContext","onChangeOrder","OrderPanel_DoubleUp","OrderPanel_DoubleDown","OrderPanel_Up","OrderPanel_Down","StyledSelect","select","Select_templateObject","Select","options","option","StyledTextarea","AutosizeTextarea","Textarea_templateObject","Textarea","TextPanel_templateObject","FontStyleRow","TextPanel_templateObject2","TextStyleIcon","FontAwesomeIcon","TextPanel_templateObject3","TextPanel","onChangeAlign","onChangeFontStyle","style","styles","split","updated","contains","without","append","join","onChangeTextDecoration","decoration","decorations","textDecoration","isAlignActive","v","isFontStyleActive","isTextDecorationActive","stylesList","faAlignLeft","isActive","faAlignCenter","faAlignRight","faBold","faItalic","faUnderline","faStrikethrough","renderTextStylePanel","TextPanel_Row","Select_Select","Textarea_Textarea","withCurrentContext","CurrentContextWrapper","ImagePanel","GLOBAL_COMPOSITE_OPERATIONS","OverlayPanel","LinkPanel","AnchorsEditableContext","AnchorsPanel","context_AnchorsEditableContext","editable","onChangeEditable","TypeIcon","AnchorPanel_templateObject","PANELS","onChangeAnchorType","undefined","assocPath","disableBezier","renderPanel","onRemoveCurrentAnchor","faVectorSquare","SettingsPanel","getPanels","Designer_templateObject","CanvasWrapper","Designer_templateObject2","Designer","onKeyDown","_this$state","tagName","keyCode","onRemoveCurrent","moveCurrentToX","moveCurrentToY","left","preventDefault","getCurrentElement","assoc","top","onSelectType","allowResetAnchors","onChangeAnchorsEditable","getElements","pathOr","getSettings","onChangeElements","data","onChangeSettings","uniqid","defaultSettings","findIndex","onChangeCurrentProp","defineProperty","remove","back","once","startIndex","endIndex","from","_result$splice","splice","removed","slicedToArray","addEventListener","removeEventListener","_this$state2","currentElement","Provider","Designer_Container","Toolbar_Toolbar","Canvas_Canvas","SettingsPanel_SettingsPanel","App","designer","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2a9e95b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faPlus, faFont, faCircle, faSquare, faQrcode, faImage, faBezierCurve } from '@fortawesome/free-solid-svg-icons';\nimport { find, propEq } from 'ramda';\n\nconst Container = styled.div`\n    width: 40px;\n`;\n\nconst IconWrapper = styled.div`\n    color: ${({ hover }) => hover ? '#888' : 'rgb(181, 181, 181)'};\n    background: ${({ hover }) => hover ? 'rgb(235, 235, 235)' : 'none'};\n    transition: all .3s;\n    height: 40px;\n    width: 40px;\n    font-size: 22px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    &:hover {\n        background: rgb(235, 235, 235);\n        color: #888;\n        cursor: pointer;\n    }\n`;\n\nconst Elements = styled.div`\n    background: rgb(235, 235, 235);\n    border-top: 1px solid rgb(224, 224, 224);\n    transition: all .3s;\n    opacity: ${({ hover }) => hover ? 1 : 0};\n    transform: scaleY(${({ hover }) => hover ? 1 : 0});\n    transform-origin: center 0;\n    overflow: hidden;\n`;\n\nconst ELEMENTS = [\n    { type: 'text', icon: faFont },\n    { type: 'rect', icon: faSquare },\n    { type: 'circle', icon: faCircle },\n    { type: 'curve', icon: faBezierCurve },\n    { type: 'image', icon: faImage },\n    { type: 'qr', icon: faQrcode },\n];\n\nexport default class Toolbar extends Component {\n    static propTypes = {\n        selected: PropTypes.string,\n        onSelect: PropTypes.func\n    };\n\n    state = {\n        hover: false\n    };\n\n    getSelectedIcon = () => {\n        const { selected } = this.props;\n\n        return selected ? find(propEq('type', selected), ELEMENTS).icon : null;\n    }\n\n    onMouseEnter = () => this.setState({ hover: true });\n\n    onMouseLeave = () => this.setState({ hover: false });\n\n    render() {\n        const { onSelect } = this.props;\n        const { hover } = this.state;\n\n        return <Container>\n            <IconWrapper onClick={() => onSelect(null)}>\n                <FontAwesomeIcon icon={faCog} />\n            </IconWrapper>\n            <div onMouseLeave={this.onMouseLeave}>\n                <IconWrapper onMouseEnter={this.onMouseEnter} hover={hover}>\n                    <FontAwesomeIcon icon={this.getSelectedIcon() || faPlus} />\n                </IconWrapper>\n                <Elements hover={hover}>\n                    { ELEMENTS.map(element =>\n                        <IconWrapper key={element.type} onClick={() => onSelect(element.type)}>\n                            <FontAwesomeIcon icon={element.icon} />\n                        </IconWrapper>\n                    )}\n                </Elements>\n            </div>\n        </Container>;\n    }\n}\n","export const WIDTH = 400;\nexport const HEIGHT = 500;\n\nexport const DEFAULT_SETTINGS = {\n    rect: {\n        type: 'rect',\n        width: 100,\n        height: 100,\n        fill: '#2460A7',\n        stroke: '#21366E',\n        strokeWidth: 0,\n        rotation: 0\n    },\n    circle: {\n        type: 'circle',\n        width: 100,\n        height: 100,\n        fill: 'rgba(106, 174, 170, 1)',\n        stroke: 'rgba(37, 148, 144, 1)',\n        strokeWidth: 0,\n        rotation: 0\n    },\n    curve: {\n        type: 'curve',\n        width: 100,\n        height: 100,\n        fill: '#949CD0',\n        stroke: '#491D70',\n        strokeWidth: 1,\n        rotation: 0,\n        anchors: true,\n        close: true\n    },\n    text: {\n        type: 'text',\n        fill: '#000000',\n        stroke: 'rgba(0, 0, 0, 0)',\n        strokeWidth: 0,\n        text: 'Текст',\n        rotation: 0,\n        fontSize: 20,\n        align: 'left',\n        fontStyle: 'normal',\n        fontFamily: 'Open Sans'\n    },\n    image: {\n        type: 'image',\n        rotation: 0,\n        width: 150,\n        height: 150\n    },\n    qr: {\n        type: 'qr',\n        fill: '#ffffff',\n        width: 150,\n        height: 150,\n        rotation: 0\n    }\n};\n\nexport const TRANSFORM_SETTINGS = {\n    curve: {\n        resizeEnabled: false,\n        rotateEnabled: false\n    },\n    text: {\n        resizeEnabled: false\n    },\n    image: {\n        enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n    },\n    qr: {\n        enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n    }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transformer as KonvaTransformer } from 'react-konva';\n\nimport { TRANSFORM_SETTINGS } from '../constants/settings';\n\nexport default class Transformer extends Component {\n    static propTypes = {\n        current: PropTypes.object\n    };\n\n    static defaultProps = {\n        current: {}\n    };\n\n    componentDidMount() {\n        this.checkNode();\n    }\n\n    componentDidUpdate() {\n        this.checkNode();\n    }\n\n    checkNode = () => {\n        const { current } = this.props;\n        const stage = this.transformer.getStage();\n        const selectedNode = stage.findOne(`.${current.name}`);\n\n        if (selectedNode === this.transformer.node()) {\n            this.transformer.forceUpdate();\n            return;\n        }\n\n        if (selectedNode && !current.anchors) {\n            this.transformer.attachTo(selectedNode);\n        } else {\n            this.transformer.detach();\n        }\n\n        this.transformer.getLayer().batchDraw();\n    }\n\n    render() {\n        const { current } = this.props;\n        const props = TRANSFORM_SETTINGS[current.type] || {};\n\n        return <KonvaTransformer\n            ref={node => this.transformer = node}\n            rotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315, 359]}\n            keepRatio\n            {...props} />\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { head } from 'ramda';\n\nexport default WrappedComponent =>\n    class ElementHandlers extends Component {\n        static propTypes = {\n            element: PropTypes.object,\n            onChange: PropTypes.func\n        };\n\n        getUpdatedAnchors = (x, y) => {\n            const { anchors } = this.props.element;\n            const headAnchor = head(anchors);\n            const xDifference = x - headAnchor.x;\n            const yDifference = y - headAnchor.y;\n\n            return anchors.map(a => ({\n                ...a,\n                x: a.x + xDifference,\n                y: a.y + yDifference\n            }));\n        }\n\n        onDragMove = e => {\n            const { element, onChange } = this.props;\n            const x = e.target.x();\n            const y = e.target.y();\n\n            onChange({\n                ...element,\n                x,\n                y,\n                ...(element.anchors ? { anchors: this.getUpdatedAnchors(x, y) } : {})\n            });\n        }\n\n        onTransform = e => {\n            const { element, onChange } = this.props;\n\n            onChange({\n                ...element,\n                x: e.currentTarget.x(),\n                y: e.currentTarget.y(),\n                rotation: e.currentTarget.rotation(),\n                scaleX: e.currentTarget.scaleX(),\n                scaleY: e.currentTarget.scaleY()\n            });\n        }\n\n        showHelper = () => {\n            const { element } = this.props;\n\n            return Math.ceil(element.width * (element.scaleX || 1)) < 6 ||\n                Math.ceil(element.height * (element.scaleY || 1)) < 6;\n        }\n\n        getHelperWidth = () => {\n            const { element } = this.props;\n\n            return Math.ceil(element.width * (element.scaleX || 1)) < 5 ? Math.ceil(5 / (element.scaleX || 1)) : element.width;\n        }\n\n        getHelperHeight = () => {\n            const { element } = this.props;\n\n            return Math.ceil(element.height * (element.scaleY || 1)) < 5 ? Math.ceil(5 / (element.scaleY || 1)) : element.height;\n        }\n\n        render() {\n            return <WrappedComponent\n                {...this.props}\n                onDragMove={this.onDragMove}\n                onTransform={this.onTransform}\n                showHelper={this.showHelper()}\n                helperWidth={this.getHelperWidth()}\n                helperHeight={this.getHelperHeight()} />;\n        }\n    }\n","import React, { Component, Fragment } from 'react';\nimport { Rect } from 'react-konva';\n\nimport withElementHandlers from '../hocs/withElementHandlers';\nimport elementProps from './elementProps';\n\nclass Rectangle extends Component {\n    static propTypes = {\n        ...elementProps\n    };\n\n    render() {\n        const {\n            element,\n            onDragMove,\n            onTransform,\n            showHelper,\n            helperWidth,\n            helperHeight\n        } = this.props;\n\n        return <Fragment>\n            { showHelper &&\n                <Rect\n                    {...element}\n                    opacity={0}\n                    name={`${element.name}-helper`}\n                    width={helperWidth}\n                    height={helperHeight}\n                    onDragMove={onDragMove}\n                    draggable\n                />\n            }\n            <Rect\n                {...element}\n                onDragMove={onDragMove}\n                onTransform={onTransform}\n                draggable\n            />\n        </Fragment>;\n    }\n}\n\nexport default withElementHandlers(Rectangle);\n","import PropTypes from 'prop-types';\n\nconst elementProps = {\n    element: PropTypes.object,\n    onDragMove: PropTypes.func,\n    onTransform: PropTypes.func,\n    layer: PropTypes.object,\n    showHelper: PropTypes.bool,\n    helperWidth: PropTypes.number,\n    helperHeight: PropTypes.number\n};\n\nexport default elementProps;\n","import React, { Component, Fragment } from 'react';\nimport { Circle as KonvaCircle } from 'react-konva';\n\nimport withElementHandlers from '../hocs/withElementHandlers';\nimport elementProps from './elementProps';\n\nclass Circle extends Component {\n    static propTypes = {\n        ...elementProps\n    };\n\n    render() {\n        const {\n            element,\n            onDragMove,\n            onTransform,\n            showHelper,\n            helperWidth,\n            helperHeight\n        } = this.props;\n\n        return <Fragment>\n            { showHelper &&\n                <KonvaCircle\n                    {...element}\n                    opacity={0}\n                    name={`${element.name}-helper`}\n                    width={helperWidth}\n                    height={helperHeight}\n                    onDragMove={onDragMove}\n                    draggable\n                />\n            }\n            <KonvaCircle\n                {...element}\n                onDragMove={onDragMove}\n                onTransform={onTransform}\n                draggable\n            />\n        </Fragment>;\n    }\n}\n\nexport default withElementHandlers(Circle);\n","import React, { Component } from 'react';\nimport { Text as KonvaText } from 'react-konva';\n\nimport withElementHandlers from '../hocs/withElementHandlers';\nimport elementProps from './elementProps';\n\nclass Text extends Component {\n    static propTypes = {\n        ...elementProps\n    };\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    componentDidUpdate(prev) {\n        if (this.props.element.fontFamily !== prev.element.fontFamily) {\n            this.redraw();\n        }\n    }\n\n    redraw = () => {\n        setTimeout(() => this.props.layer.draw(), 500);\n    }\n\n    render() {\n        const {\n            element,\n            onDragMove,\n            onTransform\n        } = this.props;\n\n        return <KonvaText\n            {...element}\n            onDragMove={onDragMove}\n            onTransform={onTransform}\n            draggable />\n    }\n}\n\nexport default withElementHandlers(Text);\n","export const FONTS = [\n    { value: 'PT Serif', label: 'PT Serif' },\n    { value: 'Arvo', label: 'Arvo' },\n    { value: 'Bitter', label: 'Bitter' },\n    { value: 'Cardo', label: 'Cardo' },\n    { value: 'Domine', label: 'Domine' },\n    { value: 'Old Standard TT', label: 'Old Standard TT' },\n    { value: 'Varela Round', label:'Varela Round' },\n    { value: 'Chivo', label: 'Chivo' },\n    { value: 'Roboto', label: 'Roboto' },\n    { value: 'Roboto Slab', label: 'Roboto Slab' },\n    { value: 'Crimson Text', label: 'Crimson Text' },\n    { value: 'Libre Baskerville', label: 'Libre Baskerville' },\n    { value: 'Montserrat', label:'Montserrat' },\n    { value: 'Archivo Narrow', label: 'Archivo Narrow' },\n    { value: 'Lato', label: 'Lato' },\n    { value: 'Anonymous Pro', label: 'Anonymous Pro' },\n    { value: 'Merriweather', label: 'Merriweather' },\n    { value: 'Neuton', label:'Neuton' },\n    { value: 'Open Sans', label: 'Open Sans' },\n    { value: 'Poppins', label: 'Poppins' },\n    { value: 'Lora', label: 'Lora' },\n    { value: 'Karla', label: 'Karla' },\n    { value: 'Source Sans Pro', label: 'Source Sans Pro' },\n    { value: 'Inconsolata', label: 'Inconsolata' },\n    { value: 'Playfair Display', label: 'Playfair Display' },\n    { value: 'Work Sans', label: 'Work Sans' },\n    { value: 'Alegreya', label: 'Alegreya' },\n    { value: 'Alegreya Sans', label: 'Alegreya Sans' },\n    { value: 'Fira Sans', label: 'Fira Sans' }\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Rect } from 'react-konva';\nimport { equals } from 'ramda';\n\nexport default class Background extends Component {\n    static propTypes = {\n        width: PropTypes.number,\n        height: PropTypes.number,\n        settings: PropTypes.object\n    };\n\n    state = {\n        image: null\n    };\n\n    componentDidMount() {\n        this.setImage();\n    }\n\n    componentDidUpdate(prev) {\n        if (!equals(prev.settings.background, this.props.settings.background)) {\n            this.setImage();\n        }\n    }\n\n    setImage = () => {\n        const image = new window.Image();\n\n        image.src = this.props.settings.background;\n        image.onload = () => this.setState({ image });\n    }\n\n    getProps = () => {\n        const { image } = this.state;\n\n        if (!image) {\n            return {};\n        }\n\n        const { width, height } = this.props;\n        const { naturalWidth, naturalHeight } = image;\n        const modifiedHeight = naturalHeight / (naturalWidth / width);\n        const modifiedWidth = naturalWidth / (naturalHeight / height);\n        const acrossWidth = height > modifiedWidth || (height < modifiedHeight && modifiedWidth < width);\n\n        return acrossWidth ? {\n            width,\n            height: modifiedHeight,\n            y: -modifiedHeight / 2 + (height / 2)\n        } : {\n            height,\n            width: modifiedWidth,\n            x: -modifiedWidth / 2 + (width / 2)\n        };\n    }\n\n    render() {\n        const { settings, width, height } = this.props;\n        const { image } = this.state;\n\n        return settings.pattern ?\n            <Rect\n                fillPatternImage={image}\n                fillPatternScaleX={settings.patternScale}\n                fillPatternScaleY={settings.patternScale}\n                width={width}\n                height={height} /> :\n            <Image\n                image={image}\n                {...this.getProps()} />;\n    }\n}\n","import React, { Component } from 'react';\nimport { Image as KonvaImage, Rect } from 'react-konva';\nimport { equals } from 'ramda';\n\nimport elementProps from './elementProps';\nimport withElementHandlers from '../hocs/withElementHandlers';\n\nclass Image extends Component {\n    static propTypes = {\n        ...elementProps\n    };\n\n    state = {\n        image: null\n    };\n\n    componentDidMount() {\n        this.setImage();\n    }\n\n    componentDidUpdate(prev) {\n        if (!equals(prev.element.image, this.props.element.image)) {\n            this.setImage();\n        }\n    }\n\n    setImage = () => {\n        const { element, onChange } = this.props;\n\n        if (element.image) {\n            const image = new window.Image();\n\n            image.src = element.image;\n            image.onload = () => {\n                this.setState({ image });\n                onChange({\n                    ...element,\n                    width: image.naturalWidth,\n                    height: image.naturalHeight\n                });\n            };\n        } else {\n            this.setState({ image: null });\n            onChange({ ...element, width: 150, height: 150 });\n        }\n\n    }\n\n    render() {\n        const { element, onDragMove, onTransform } = this.props;\n        const { image } = this.state;\n\n        return image ?\n            <KonvaImage\n                {...element}\n                image={image}\n                onDragMove={onDragMove}\n                onTransform={onTransform}\n                draggable\n            /> :\n            <Rect\n                {...element}\n                fill='gray'\n                draggable />;\n    }\n}\n\nexport default withElementHandlers(Image);\n","export const convertStr = str => {\n    let out = '';\n    for (let i = 0; i < str.length; i++) {\n        let charcode = str.charCodeAt(i);\n        if (charcode < 0x0080) {\n            out += String.fromCharCode(charcode);\n        } else if (charcode < 0x0800) {\n            out += String.fromCharCode(0xc0 | (charcode >> 6));\n            out += String.fromCharCode(0x80 | (charcode & 0x3f));\n        } else if (charcode < 0xd800 || charcode >= 0xe000) {\n            out += String.fromCharCode(0xe0 | (charcode >> 12));\n            out += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3f));\n            out += String.fromCharCode(0x80 | (charcode & 0x3f));\n        } else {\n            i++;\n            charcode =\n            0x10000 + (((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n            out += String.fromCharCode(0xf0 | (charcode >> 18));\n            out += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3f));\n            out += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3f));\n            out += String.fromCharCode(0x80 | (charcode & 0x3f));\n        }\n    }\n    return out;\n}\n","import React, { Component } from 'react';\nimport { Rect, Shape } from 'react-konva';\nimport qrcode from 'qr.js';\n\nimport elementProps from './elementProps';\nimport { convertStr } from '../../utils/qr';\nimport withElementHandlers from '../hocs/withElementHandlers';\n\nclass Qr extends Component {\n    static propTypes = {\n        ...elementProps\n    };\n\n    sceneFunc = (context, shape) => {\n        const { element } = this.props;\n\n        const qr = qrcode(convertStr(element.link));\n        const cells = qr.modules;\n        const numCells = cells.length;\n        const scale = element.width / numCells;\n\n        context.scale(scale, scale);\n        context.fillStyle = element.fill;\n        context.fillRect(0, 0, numCells, numCells);\n\n        cells.forEach(function(row, rdx) {\n            row.forEach(function(cell, cdx) {\n                if (cell) {\n                    context.beginPath();\n                    context.rect(cdx, rdx, 1, 1);\n                    context.closePath();\n                    context.fillStrokeShape(shape);\n                }\n            });\n        });\n    }\n\n    render() {\n        const { element, onDragMove, onTransform } = this.props;\n\n        return element.link ?\n            <Shape\n                {...element}\n                fill='black'\n                sceneFunc={this.sceneFunc}\n                onDragMove={onDragMove}\n                onTransform={onTransform}\n                draggable /> :\n            <Rect\n                {...element}\n                onDragMove={onDragMove}\n                onTransform={onTransform}\n                draggable />;\n    }\n}\n\nexport default withElementHandlers(Qr);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stage, Layer, Rect, Circle as KonvaCircle, Line } from 'react-konva';\nimport { find, propEq, filter, has, pathEq, update, equals, head, unnest } from 'ramda';\nimport WebFont from 'webfontloader';\n\nimport Transformer from './Transformer';\nimport Rectangle from './elements/Rectangle';\nimport Circle from './elements/Circle';\nimport Text from './elements/Text';\nimport { FONTS } from '../constants/fonts';\nimport Background from './Background';\nimport Image from './elements/Image';\nimport Qr from './elements/Qr';\nimport Curve from './elements/Curve';\n\nconst ELEMENTS = {\n    text: Text,\n    rect: Rectangle,\n    circle: Circle,\n    curve: Curve,\n    image: Image,\n    qr: Qr\n};\n\nexport default class Canvas extends Component {\n    static propTypes = {\n        width: PropTypes.number,\n        height: PropTypes.number,\n        current: PropTypes.object,\n        onChangeCurrent: PropTypes.func,\n        onAddElement: PropTypes.func,\n        onChangeCurrentElement: PropTypes.func,\n        onChangeCurrentProp: PropTypes.func,\n        onAddAnchor: PropTypes.func,\n        anchorsEditable: PropTypes.bool,\n        onChangeCurrentAnchor: PropTypes.func,\n        currentAnchor: PropTypes.object,\n        elements: PropTypes.arrayOf(PropTypes.object)\n    };\n\n    componentDidMount() {\n        WebFont.load({\n            google: {\n                families: FONTS.map(i => i.value)\n            },\n            classes: false\n        });\n    }\n\n    handleStageMouseDown = e => {\n        const { onChangeCurrent, elements, selectedType, onAddElement, current, onAddAnchor, anchorsEditable } = this.props;\n\n        if (selectedType) {\n            onAddElement(e.evt.layerX, e.evt.layerY)\n            return;\n        }\n\n        if (e.target === e.target.getStage()) {\n            onChangeCurrent(null);\n            return;\n        }\n\n        if (e.target.getParent().className === 'Transformer' || e.target.attrs.className === 'anchor') {\n            return;\n        }\n\n        const name = (e.target.name() || '').replace('-helper', '');\n        const element = find(propEq('name', name), elements);\n\n        if (element && !anchorsEditable) {\n            onChangeCurrent(name);\n        } else {\n            current && current.anchors && anchorsEditable ?\n                onAddAnchor(e.evt.layerX, e.evt.layerY) :\n                onChangeCurrent(null);\n        }\n    }\n\n    renderElement = element => {\n        const { onChangeCurrentElement } = this.props;\n        const Component = ELEMENTS[element.type];\n\n        return <Component\n            key={element.name}\n            element={element}\n            onChange={onChangeCurrentElement}\n            layer={this.layer} />;\n    }\n\n    getElementsWithAnchors = () => {\n        const { elements } = this.props;\n\n        return filter(has('anchors'), elements);\n    }\n\n    onDragAnchor = (e, index) => {\n        const { onChangeCurrentElement, current } = this.props;\n\n        if (current) {\n            const x = e.target.x();\n            const y = e.target.y();\n\n            onChangeCurrentElement({\n                ...current,\n                x: index ? current.x : x,\n                y: index ? current.y : y,\n                anchors: update(index, { ...current.anchors[index], x, y }, current.anchors)\n            });\n        }\n    }\n\n    renderAnchors = element => {\n        const { onChangeCurrentAnchor, currentAnchor } = this.props;\n        const show = pathEq(['current', 'name'], element.name, this.props);\n\n        return show && element.anchors.map((anchor, index) =>\n            <KonvaCircle\n                key={`anchor-${element.name}-${index}`}\n                className='anchor'\n                x={anchor.x}\n                y={anchor.y}\n                fill='white'\n                stroke='rgb(0, 161, 255)'\n                strokeWidth={equals(currentAnchor, { name: element.name, index }) ? 2 : 1}\n                width={10}\n                height={10}\n                onDragMove={e => this.onDragAnchor(e, index)}\n                onDragStart={() => onChangeCurrentAnchor(element.name, index)}\n                onClick={() => onChangeCurrentAnchor(element.name, index)}\n                draggable />\n        );\n    }\n\n    renderAnchorBorder = element => {\n        const headAnchor = head(element.anchors);\n        const show = pathEq(['current', 'name'], element.name, this.props) && headAnchor;\n        const points = unnest(element.anchors.map(({ x, y }) => ([x, y])));\n\n        return show &&\n            <Line\n                stroke='rgb(0, 161, 255)'\n                strokeWidth={1}\n                key={`anchor-border-${element.name}`}\n                points={element.close ? [ ...points, headAnchor.x, headAnchor.y ] : points} />;\n    }\n\n    render() {\n        const { width, height, current, elements, settings } = this.props;\n        const elementsWithAnchors = this.getElementsWithAnchors();\n\n        return <Stage\n            width={width}\n            height={height}\n            onMouseDown={this.handleStageMouseDown}>\n            <Layer>\n                <Rect\n                    width={width}\n                    height={height}\n                    fill={settings.fill} />\n            </Layer>\n            { settings.background &&\n                <Layer>\n                    <Background\n                        settings={settings}\n                        width={width}\n                        height={height} />\n                </Layer>\n            }\n            <Layer ref={node => this.layer = node}>\n                { elements.map(this.renderElement) }\n                <Transformer current={current} />\n            </Layer>\n            <Layer>\n                { elementsWithAnchors.map(this.renderAnchorBorder) }\n                { elementsWithAnchors.map(this.renderAnchors) }\n            </Layer>\n        </Stage>;\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Shape } from 'react-konva';\nimport { forEach, reduce, last, dropLast, is, unnest, any, propEq } from 'ramda';\n\nimport elementProps from './elementProps';\nimport withElementHandlers from '../hocs/withElementHandlers';\n\nclass Curve extends Component {\n    static propTypes = {\n        ...elementProps\n    };\n\n    sceneFunc = (context, shape) => {\n        const { anchors = [], x, y, close } = this.props.element;\n\n        context.beginPath();\n\n        const grouped = reduce((res, cur) => {\n            const lastIsArray = is(Array, last(res));\n\n            if (cur.bezier || (!cur.bezier && lastIsArray && !any(propEq('bezier', false), last(res)))) {\n                const isCurve = lastIsArray && last(last(res)).bezier;\n                let lastAnchor = isCurve ? last(res) : [];\n                lastAnchor.push(cur);\n                return [...(isCurve ? dropLast(1, res) : res), lastAnchor];\n            } else {\n                return [...res, cur];\n            }\n        }, [], anchors);\n\n        forEach((anchor, i) => {\n            if (is(Array, anchor)) {\n                const points = unnest(anchor.map(({ x: aX, y: aY }) => ([aX - x, aY - y])));\n\n                if (points.length === 2) {\n                    context.lineTo(...points);\n                } if (points.length === 4) {\n                    context.quadraticCurveTo(...points);\n                } else {\n                    context.bezierCurveTo(...points);\n                }\n            } else {\n                if (i === 0) {\n                    context.moveTo(anchor.x - x, anchor.y - y);\n                } else {\n                    context.lineTo(anchor.x - x, anchor.y - y);\n                }\n            }\n        }, grouped);\n\n        close && context.closePath();\n        context.fillStrokeShape(shape);\n    }\n\n    render() {\n        const {\n            element,\n            onDragMove,\n            onTransform\n        } = this.props;\n\n        return <Fragment>\n            <Shape\n                {...element}\n                opacity={0}\n                strokeWidth={5}\n                name={`${element.name}-helper`}\n                sceneFunc={this.sceneFunc}\n                onDragMove={onDragMove}\n                draggable\n            />\n            <Shape\n                {...element}\n                sceneFunc={this.sceneFunc}\n                onDragMove={onDragMove}\n                onTransform={onTransform}\n                draggable\n            />\n        </Fragment>;\n    }\n}\n\nexport default withElementHandlers(Curve);\n","import styled from 'styled-components';\n\nexport const Panel = styled.div`\n    width: 300px;\n    background: rgb(241, 241, 241);\n    padding: 15px;\n    margin-bottom: 10px;\n    & > .panel-row:not(:last-of-type) {\n        margin-bottom: 10px;\n    }\n`;\n\nexport const PanelButton = styled.button`\n    padding: 3px 20px;\n    border: 1px solid gray;\n    color: darkslategray;\n    background: rgb(241, 241, 241);\n    border-radius: 3px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    outline: none;\n`;\n\nexport const Small = styled.div`\n    font-size: 9px;\n    color: gray;\n    padding-top: 2px;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Column = styled.div`\n    width: 50%;\n`;\n\nconst Label = styled.span`\n    color: gray;\n    font-size: 11px;\n`;\n\nexport default class Row extends Component {\n    render() {\n        const { label, children } = this.props;\n\n        return <Container className='panel-row'>\n            <Column>\n                <Label>{ label }</Label>\n            </Column>\n            <Column>\n                { children }\n            </Column>\n        </Container>;\n    }\n}\n","import { createContext } from 'react';\n\nconst CurrentContext = createContext({});\n\nexport default CurrentContext;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ClickOutside from 'react-click-outside';\nimport { SketchPicker } from 'react-color'\n\nimport CurrentContext from '../context/CurrentContext';\n\nconst MainContainer = styled.div`\n    display: flex;\n`;\n\nconst Container = styled.div`\n    position: relative;\n`;\n\nconst Swatch = styled.div`\n    width: 18px;\n    height: 18px;\n    border: 2px solid #fff;\n    background-color: ${({ color }) => color || '#fff'};\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nconst PickerWrapper = styled.div`\n    position: absolute;\n    right: 0;\n    top: 20px;\n    z-index: 10;\n`;\n\nexport default class ColorPicker extends Component {\n    static propTypes = {\n        prop: PropTypes.string\n    };\n\n    static defaultProps = {\n        prop: 'fill'\n    };\n\n    state = {\n        opened: false\n    };\n\n    toggle = () => this.setState(prev => ({ opened: !prev.opened }));\n\n    close = () => this.setState({ opened: false });\n\n    onChange = ({ rgb }, onChange) => {\n        const { prop } = this.props;\n\n        onChange(prop, `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`);\n    }\n\n    renderPicker = ({ current, onChangeProp, onChangeSettingsProp, settings }) => {\n        const { prop } = this.props;\n        const { opened } = this.state;\n        const item = current || settings;\n\n        return <MainContainer>\n            <Container>\n                <Swatch\n                    color={item[prop]} onClick={this.toggle} />\n                { opened &&\n                    <PickerWrapper>\n                        <ClickOutside onClickOutside={this.close}>\n                            <SketchPicker\n                                color={item[prop]}\n                                onChange={color => this.onChange(color, current ? onChangeProp : onChangeSettingsProp)} />\n                        </ClickOutside>\n                    </PickerWrapper>\n                }\n            </Container>\n        </MainContainer>;\n    }\n\n    render() {\n        return <CurrentContext.Consumer>\n            {this.renderPicker}\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { head } from 'ramda';\n\nimport { PanelButton } from './StyledSettingsComponents';\nimport CurrentContext from '../context/CurrentContext';\n\nconst FileInput = styled.input`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor:pointer;\n    ::-webkit-file-upload-button {\n        cursor:pointer;\n    }\n`;\n\nexport default class ImageLoader extends Component {\n    static propTypes = {\n        prop: PropTypes.string,\n        removable: PropTypes.bool\n    };\n\n    reader = new FileReader();\n\n    onLoad = (e, fn) => {\n        const { prop } = this.props;\n        const file = head(e.target.files);\n\n        if (file) {\n            this.reader.readAsDataURL(file);\n            this.reader.onload = () => fn(prop, this.reader.result);\n        }\n    }\n\n    renderLoader = ({ current, settings, onChangeProp, onChangeSettingsProp }) => {\n        const { prop, removable } = this.props;\n        const item = current || settings;\n        const fn = current ? onChangeProp : onChangeSettingsProp;\n\n        return item[prop] && removable ?\n            <PanelButton onClick={() => fn(prop, null)}>\n                Удалить\n            </PanelButton> :\n            <PanelButton>\n                Загрузить\n                <FileInput\n                    type='file'\n                    accept='image/*'\n                    onChange={e => this.onLoad(e, fn)} />\n            </PanelButton>;\n    }\n\n    render() {\n        return <CurrentContext.Consumer>\n            { this.renderLoader }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CurrentContext from '../context/CurrentContext';\n\nexport default class Checkbox extends Component {\n    static propTypes = {\n        prop: PropTypes.string\n    };\n\n    renderCheckbox = ({ current, settings, onChangeProp, onChangeSettingsProp }) => {\n        const { prop } = this.props;\n        const value = !!(current || settings)[prop];\n        const fn = current ? onChangeProp : onChangeSettingsProp;\n\n        return <input\n            type='checkbox'\n            checked={value}\n            onChange={e => fn(prop, e.target.checked)} />;\n    }\n\n    render() {\n        return <CurrentContext.Consumer>\n            { this.renderCheckbox }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\n\nimport CurrentContext from '../context/CurrentContext';\n\nexport default class Range extends Component {\n    renderRange = ({ current, settings, onChangeProp, onChangeSettingsProp }) => {\n        const { prop } = this.props;\n        const value = (current || settings)[prop];\n        const fn = current ? onChangeProp : onChangeSettingsProp;\n\n        return <input\n            type='range'\n            min={.01}\n            max={1}\n            step={.01}\n            value={String(value || 1)}\n            onChange={e => fn(prop, Number(e.target.value))} />;\n    }\n\n    render() {\n        return <CurrentContext.Consumer>\n            { this.renderRange }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component, Fragment } from 'react';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport ColorPicker from './ColorPicker';\nimport ImageLoader from './ImageLoader';\nimport CurrentContext from '../context/CurrentContext';\nimport Checkbox from './Checkbox';\nimport Range from './Range';\n\nexport default class BackgroundPanel extends Component {\n    render() {\n        return <Panel>\n            <Row label='Фон'>\n                <ImageLoader prop='background' removable />\n            </Row>\n            <Row label='Цвет фона'>\n                <ColorPicker />\n            </Row>\n            <CurrentContext.Consumer>\n                { ({ settings }) => settings.background &&\n                    <Fragment>\n                        <Row label='Паттерн'>\n                            <Checkbox prop='pattern' />\n                        </Row>\n                        { settings.pattern &&\n                            <Row label='Масштаб'>\n                                <Range prop='patternScale' />\n                            </Row>\n                        }\n                    </Fragment>\n                }\n            </CurrentContext.Consumer>\n        </Panel>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { isNil } from 'ramda';\n\nimport CurrentContext from '../context/CurrentContext';\nimport { Small } from './StyledSettingsComponents';\n\nconst StyledInput = styled.input`\n    width: ${({ width }) => width || '50px'};\n    background: rgb(225, 225, 225);\n    border-width: 0px;\n    padding: 3px 5px;\n    color: darkslategray;\n    border-radius: 3px;\n    outline: none;\n`;\n\nexport default class Input extends Component {\n    static propTypes = {\n        small: PropTypes.string,\n        isNumber: PropTypes.bool,\n        prop: PropTypes.string,\n        parse: PropTypes.func,\n        format: PropTypes.func,\n        onChange: PropTypes.func\n    };\n\n    onChange = (e, onChangeProp, current) => {\n        const { prop, isNumber, format, onChange } = this.props;\n        const { value } = e.target;\n        const val = value ? (isNumber ? Number(value.replace(/[^.0-9]/gim,'')) : value) : null;\n        const formated = format ? format(val, current) : val;\n\n        onChangeProp(prop, formated);\n        onChange && onChange(formated);\n    }\n\n    getValue = current => {\n        const { prop, parse } = this.props;\n        const value = isNil(current[prop]) ? '' : current[prop];\n\n        return parse ? parse(value, current) : value;\n    }\n\n    render() {\n        const { small, width } = this.props;\n\n        return <CurrentContext.Consumer>\n            { ({ current, onChangeProp }) =>\n                <div>\n                    <StyledInput\n                        type='text'\n                        width={width}\n                        value={this.getValue(current)}\n                        onChange={e => this.onChange(e, onChangeProp, current)} />\n                    { small && <Small>{ small }</Small> }\n                </div>\n            }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { has, head } from 'ramda';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport Input from './Input';\nimport { TRANSFORM_SETTINGS } from '../../constants/settings';\nimport CurrentContext from '../context/CurrentContext';\n\nconst Inputs = styled.div`\n    display: flex;\n    & > div:first-of-type {\n        margin-right: 10px;\n    }\n`;\n\nexport default class SizePanel extends Component {\n    static propTypes = {\n        type: PropTypes.string\n    };\n\n    disabledProp = path => {\n        const { type } = this.props;\n        const settings = TRANSFORM_SETTINGS[type];\n\n        return settings && has(path, settings) && !settings[path];\n    }\n\n    parseWidth = (value, current) => {\n        const { scaleX = 1 } = current;\n\n        return Math.abs(Math.round((isNaN(value) ? 0 : value) * scaleX));\n    }\n\n    formatWidth = (value, current) => {\n        const { scaleX = 1 } = current;\n\n        return Math.abs(Math.round((isNaN(value) ? 0 : value) / scaleX));\n    }\n\n    parseHeight = (value, current) => {\n        const { scaleY = 1 } = current;\n\n        return Math.abs(Math.round((isNaN(value) ? 0 : value) * scaleY));\n    }\n\n    formatHeight = (value, current) => {\n        const { scaleY = 1 } = current;\n\n        return Math.abs(Math.round((isNaN(value) ? 0 : value) / scaleY));\n    }\n\n    onChangeX = (x, current, onChange) => {\n        if (current.anchors) {\n            const headAnchor = head(current.anchors);\n            const xDifference = x - headAnchor.x;\n\n            const anchors = current.anchors.map(a => ({\n                ...a,\n                x: a.x + xDifference\n            }));\n\n            onChange({ ...current, x, anchors });\n        }\n    }\n\n    onChangeY = (y, current, onChange) => {\n        if (current.anchors) {\n            const headAnchor = head(current.anchors);\n            const yDifference = y - headAnchor.y;\n\n            const anchors = current.anchors.map(a => ({\n                ...a,\n                y: a.y + yDifference\n            }));\n\n            onChange({ ...current, y, anchors });\n        }\n    }\n\n    render() {\n        return <Panel>\n            { !this.disabledProp('resizeEnabled') &&\n                <Row label='Размер'>\n                    <Inputs>\n                        <Input\n                            prop='width'\n                            small='ширина'\n                            parse={this.parseWidth}\n                            format={this.formatWidth}\n                            isNumber />\n                        <Input\n                            prop='height'\n                            small='высота'\n                            parse={this.parseHeight}\n                            format={this.formatHeight}\n                            isNumber />\n                    </Inputs>\n                </Row>\n            }\n            <Row label='Позиция'>\n                <CurrentContext.Consumer>\n                    { ({ current, onChange }) =>\n                        <Inputs>\n                            <Input\n                                prop='x'\n                                small='слева'\n                                isNumber\n                                onChange={x => this.onChangeX(x, current, onChange)} />\n                            <Input\n                                prop='y'\n                                small='сверху'\n                                isNumber\n                                onChange={y => this.onChangeY(y, current, onChange)} />\n                        </Inputs>\n                    }\n                </CurrentContext.Consumer>\n            </Row>\n            { !this.disabledProp('rotateEnabled') &&\n                <Row label='Поворот'>\n                    <Input prop='rotation' small='угол' isNumber />\n                </Row>\n            }\n        </Panel>;\n    }\n}\n","import React, { Component } from 'react';\n\nimport { Panel, PanelButton } from './StyledSettingsComponents';\nimport CurrentContext from '../context/CurrentContext';\n\nexport default class RemovePanel extends Component {\n    render() {\n        return <CurrentContext.Consumer>\n            { ({ onRemove }) =>\n                <Panel>\n                    <PanelButton onClick={onRemove}>Удалить</PanelButton>\n                </Panel>\n            }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport ColorPicker from './ColorPicker';\nimport Input from './Input';\n\nconst StrokeContainer = styled.div`\n    display: flex;\n    & > div:first-of-type {\n        margin-right: 10px;\n    }\n`;\n\nexport default class ColorPanel extends Component {\n    static propTypes = {\n        type: PropTypes.string\n    };\n\n    render() {\n        const { type } = this.props;\n\n        return <Panel>\n            <Row label='Заливка'>\n                <ColorPicker />\n            </Row>\n            { type !== 'qr' &&\n                <Row label='Обводка'>\n                    <StrokeContainer>\n                        <ColorPicker prop='stroke' />\n                        <Input prop='strokeWidth' isNumber small='толщина' />\n                    </StrokeContainer>\n                </Row>\n            }\n        </Panel>\n    }\n}\n","import { createContext } from 'react';\n\nconst OrderContext = createContext({});\n\nexport default OrderContext;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport OrderContext from '../context/OrderContext';\n\nconst Item = styled.div`\n    color: rgb(81, 81, 81);\n    font-size: 11px;\n    transition: all .3s;\n    cursor: pointer;\n    margin-bottom: 3px;\n    display: flex;\n    align-items: center;\n    &:hover {\n        color: #000;\n    }\n    svg {\n        margin-right: 5px;\n    }\n`;\n\nconst DoubleUp = () => <svg width={15} height={15}>\n    <g>\n        <rect x={5} y={5} width={9} height={9} fill='white' strokeWidth={1} stroke='black' />\n        <rect x={3} y={3} width={9} height={9} fill='white' strokeWidth={1} stroke='black' />\n        <rect x={1} y={1} width={9} height={9} fill='#ababab' stroke='black' strokeWidth={1} />\n    </g>\n</svg>;\n\nconst DoubleDown = () => <svg width={15} height={15}>\n    <g>\n        <rect x={5} y={5} width={9} height={9} fill='#ababab' strokeWidth={1} stroke='black' />\n        <rect x={3} y={3} width={9} height={9} fill='white' strokeWidth={1} stroke='black' />\n        <rect x={1} y={1} width={9} height={9} fill='white' stroke='black' strokeWidth={1} />\n    </g>\n</svg>;\n\nconst Up = () => <svg width={15} height={15}>\n    <g>\n        <rect x={5} y={5} width={9} height={9} fill='white' strokeWidth={1} stroke='black' />\n        <rect x={1} y={1} width={9} height={9} fill='#ababab' stroke='black' strokeWidth={1} />\n    </g>\n</svg>;\n\nconst Down = () => <svg width={15} height={15}>\n    <g>\n        <rect x={5} y={5} width={9} height={9} fill='#ababab' strokeWidth={1} stroke='black' />\n        <rect x={1} y={1} width={9} height={9} fill='white' stroke='black' strokeWidth={1} />\n    </g>\n</svg>;\n\nexport default class OrderPanel extends Component {\n    render() {\n        return <Panel>\n            <OrderContext.Consumer>\n                { ({ onChangeOrder }) =>\n                    <Row label='Порядок'>\n                        <Item onClick={() => onChangeOrder()}>\n                            <DoubleUp /> На передний план\n                        </Item>\n                        <Item onClick={() => onChangeOrder(true)}>\n                            <DoubleDown /> На задний план\n                        </Item>\n                        <Item onClick={() => onChangeOrder(false, true)}>\n                            <Up /> Переложить вперед\n                        </Item>\n                        <Item onClick={() => onChangeOrder(true, true)}>\n                            <Down /> Переложить назад\n                        </Item>\n                    </Row>\n                }\n            </OrderContext.Consumer>\n        </Panel>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CurrentContext from '../context/CurrentContext';\nimport { Small } from './StyledSettingsComponents';\n\nconst StyledSelect = styled.select`\n    -webkit-appearance: none;\n    border-width: 0px 3px 0px 0px;\n    padding: 3px 3px 3px 5px;\n    outline: none;\n    border-radius: 0px;\n    border-right-style: solid;\n    border-right-color: rgb(183, 183, 183);\n    color: darkslategray;\n    width: 100%;\n`;\n\nexport default class Select extends Component {\n    static propTypes = {\n        options: PropTypes.arrayOf(PropTypes.object),\n        prop: PropTypes.string,\n        small: PropTypes.string\n    };\n\n    static defaultProps = {\n        options: []\n    }\n\n    onChange = (e, onChange) => {\n        const { prop } = this.props;\n\n        onChange(prop, e.target.value);\n    }\n\n    render() {\n        const { options, prop, small } = this.props;\n\n        return <CurrentContext.Consumer>\n            { ({ current, onChangeProp }) =>\n                <div>\n                    <StyledSelect\n                        value={current[prop]}\n                        onChange={e => this.onChange(e, onChangeProp)}>\n                        { options.map(option =>\n                            <option key={option.value} value={option.value}>\n                                { option.label }\n                            </option>\n                        )}\n                    </StyledSelect>\n                    { small && <Small>{ small }</Small> }\n                </div>\n            }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AutosizeTextarea from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\nimport CurrentContext from '../context/CurrentContext';\n\nconst StyledTextarea = styled(AutosizeTextarea)`\n    background: rgb(225, 225, 225);\n    border-width: 0px;\n    padding: 3px 5px;\n    color: darkslategray;\n    border-radius: 3px;\n    outline: none;\n    width: 100%;\n    resize: none;\n`;\n\nexport default class Textarea extends Component {\n    static propTypes = {\n        prop: PropTypes.string\n    };\n\n    render() {\n        const { prop } = this.props;\n\n        return <CurrentContext.Consumer>\n            { ({ current, onChangeProp }) =>\n                <StyledTextarea\n                    value={current[prop]}\n                    onChange={e => onChangeProp(prop, e.target.value)} />\n            }\n        </CurrentContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { contains, without, append, equals } from 'ramda';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Input from './Input';\nimport Select from './Select';\nimport Textarea from './Textarea';\nimport { FONTS } from '../../constants/fonts';\nimport { faAlignLeft, faAlignCenter, faAlignRight, faBold, faItalic, faUnderline, faStrikethrough } from '@fortawesome/free-solid-svg-icons';\nimport withCurrentContext from '../hocs/withCurrentContext';\n\nconst Row = styled.div`\n    margin-bottom: 10px;\n`;\n\nconst FontStyleRow = styled(Row)`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst TextStyleIcon = styled(FontAwesomeIcon)`\n    font-size: 12px;\n    cursor: pointer;\n    transition: all .3s;\n    &:hover {\n        color: black;\n    }\n    &:not(:last-of-type) {\n        margin-right: 7px;\n    }\n`;\n\nclass TextPanel extends Component {\n    static propTypes = {\n        onChangeProp: PropTypes.func,\n        current: PropTypes.object\n    };\n\n    onChangeAlign = align => {\n        const { onChangeProp } = this.props;\n\n        onChangeProp('align', align);\n    }\n\n    onChangeFontStyle = style => {\n        const { current, onChangeProp } = this.props;\n        const styles = (current.fontStyle || '').split(' ');\n        let updated = contains(style, styles) ? without([style], styles) : append(style, styles);\n        updated = !updated.length ?\n            ['normal'] : contains('normal', updated) && updated.length > 1 ?\n            without(['normal'], updated) : updated;\n\n        onChangeProp('fontStyle', updated.join(' '));\n    }\n\n    onChangeTextDecoration = decoration => {\n        const { current, onChangeProp } = this.props;\n        const decorations = (current.textDecoration || '').split(' ');\n        const updated = contains(decoration, decorations) ? without([decoration], decorations) : append(decoration, decorations);\n\n        onChangeProp('textDecoration', updated.join(' '));\n    }\n\n    isAlignActive = v => equals(v, this.props.current.align);\n\n    isFontStyleActive = v => contains(v, this.props.current.fontStyle || '');\n\n    isTextDecorationActive = v => contains(v, this.props.current.textDecoration || '');\n\n    stylesList = [\n        { icon: faAlignLeft, value: 'left', onChange: this.onChangeAlign, isActive: this.isAlignActive },\n        { icon: faAlignCenter, value: 'center', onChange: this.onChangeAlign, isActive: this.isAlignActive },\n        { icon: faAlignRight, value: 'right', onChange: this.onChangeAlign, isActive: this.isAlignActive },\n        { icon: faBold, value: 'bold', onChange: this.onChangeFontStyle, isActive: this.isFontStyleActive },\n        { icon: faItalic, value: 'italic', onChange: this.onChangeFontStyle, isActive: this.isFontStyleActive },\n        { icon: faUnderline, value: 'underline', onChange: this.onChangeTextDecoration, isActive: this.isTextDecorationActive },\n        { icon: faStrikethrough, value: 'line-through', onChange: this.onChangeTextDecoration, isActive: this.isTextDecorationActive }\n    ];\n\n    renderTextStylePanel = () => {\n        return <div>\n            { this.stylesList.map(({ icon, value, onChange, isActive }) =>\n                <TextStyleIcon\n                    key={value}\n                    color={isActive(value) ? 'black' : 'rgb(181, 181, 181)'}\n                    icon={icon}\n                    onClick={() => onChange(value)} />\n            )}\n        </div>;\n    }\n\n    render() {\n        return <Panel>\n            <FontStyleRow>\n                <Input\n                    prop='fontSize'\n                    small='размер шрифта'\n                    isNumber />\n                { this.renderTextStylePanel() }\n            </FontStyleRow>\n            <Row>\n                <Select\n                    small='выберите шрифт'\n                    prop='fontFamily'\n                    options={FONTS} />\n            </Row>\n            <Textarea prop='text' />\n        </Panel>;\n    }\n}\n\nexport default withCurrentContext(TextPanel);\n","import React, { Component } from 'react';\n\nimport CurrentContext from '../context/CurrentContext';\n\nexport default WrappedComponent =>\n    class CurrentContextWrapper extends Component {\n        render() {\n            return <CurrentContext.Consumer>\n                { props => <WrappedComponent {...props} {...this.props} /> }\n            </CurrentContext.Consumer>\n        }\n    }\n","import React, { Component } from 'react';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport ImageLoader from './ImageLoader';\n\nexport default class ImagePanel extends Component {\n    render() {\n        return <Panel>\n            <Row label='Изображение'>\n                <ImageLoader prop='image' />\n            </Row>\n        </Panel>\n    }\n}\n","export const GLOBAL_COMPOSITE_OPERATIONS = [\n    { value: 'source-over', label: 'Нормальный' },\n    { value: 'multiply', label: 'Умножение' },\n    { value: 'screen', label: 'Осветление' },\n    { value: 'overlay', label: 'Перекрытие' },\n    { value: 'darken', label: 'Замена темным' },\n    { value: 'lighten', label: 'Замена светлым' },\n    { value: 'color-dodge', label: 'Осветление основы' },\n    { value: 'color-burn', label: 'Затемнение основы' },\n    { value: 'hard-light', label: 'Жесткий свет' },\n    { value: 'soft-light', label: 'Мягкий свет' },\n    { value: 'difference', label: 'Разница' },\n    { value: 'exclusion', label: 'Исключение' },\n    { value: 'hue', label: 'Цветовой тон' },\n    { value: 'saturation', label: 'Насыщенность' },\n    { value: 'color', label: 'Цветность' },\n    { value: 'luminosity', label: 'Свечение' }\n];\n","import React, { Component } from 'react';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport Select from './Select';\nimport { GLOBAL_COMPOSITE_OPERATIONS } from '../../constants/globalCompositeOperations';\n\nexport default class OverlayPanel extends Component {\n    render() {\n        return <Panel>\n            <Row label='Наложение'>\n                <Select\n                    prop='globalCompositeOperation'\n                    options={GLOBAL_COMPOSITE_OPERATIONS} />\n            </Row>\n        </Panel>\n    }\n}\n","import React, { Component } from 'react';\n\nimport { Panel } from './StyledSettingsComponents';\nimport Row from './Row';\nimport Input from './Input';\n\nexport default class LinkPanel extends Component {\n    render() {\n        return <Panel>\n            <Row label='Ссылка'>\n                <Input prop='link' width='100%' />\n            </Row>\n        </Panel>;\n    }\n}\n","import { createContext } from 'react';\n\nconst AnchorsEditableContext = createContext({});\n\nexport default AnchorsEditableContext;\n","import React, { Component } from 'react';\n\nimport { Panel, PanelButton } from './StyledSettingsComponents';\nimport AnchorsEditableContext from '../context/AnchorsEditableContext';\nimport Row from './Row';\nimport Checkbox from './Checkbox';\n\nexport default class AnchorsPanel extends Component {\n    render() {\n        return <Panel>\n            <Row label='Опорные точки'>\n                <AnchorsEditableContext.Consumer>\n                    { ({ editable, onChangeEditable }) =>\n                        <PanelButton onClick={() => onChangeEditable(!editable)}>\n                            { editable ? 'Сохранить' : 'Добавить' }\n                        </PanelButton>\n                    }\n                </AnchorsEditableContext.Consumer>\n            </Row>\n            <Row label='Замкнуть контур'>\n                <Checkbox prop='close' />\n            </Row>\n        </Panel>;\n    }\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBezierCurve, faVectorSquare } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport { assocPath, path } from 'ramda';\n\nimport { Panel, PanelButton } from './StyledSettingsComponents';\nimport Row from './Row';\nimport AnchorsEditableContext from '../context/AnchorsEditableContext';\nimport CurrentContext from '../context/CurrentContext';\n\nconst TypeIcon = styled(FontAwesomeIcon)`\n    margin-right: 10px;\n    margin-bottom: 15px;\n    cursor: pointer;\n    transition: all .3s;\n    &:hover {\n        color: black;\n    }\n`;\n\nexport default class AnchorPanel extends Component {\n    onChangeAnchorType = (onChangeProp, anchors, index, bezier = false) => {\n        onChangeProp('anchors', assocPath([index, 'bezier'], bezier, anchors));\n    }\n\n    disableBezier = (anchors, index) => {\n        return index === 0 ||\n            index === anchors.length - 1 ||\n            (path([index - 1, 'bezier'], anchors) && path([index + 1, 'bezier'], anchors)) ||\n            (path([index - 1, 'bezier'], anchors) && path([index - 2, 'bezier'], anchors)) ||\n            (path([index + 1, 'bezier'], anchors) && path([index + 2, 'bezier'], anchors));\n    }\n\n    renderPanel = (currentAnchor, onRemoveCurrentAnchor, current, onChangeProp) => {\n        const anchor = current.anchors[currentAnchor.index];\n        const disableBezier = this.disableBezier(current.anchors, currentAnchor.index);\n\n        return <Panel>\n            <Row label='Тип'>\n                { !disableBezier && <TypeIcon\n                    icon={faBezierCurve}\n                    color={anchor.bezier ? 'black' : 'rgb(181, 181, 181)'}\n                    onClick={() => this.onChangeAnchorType(onChangeProp, current.anchors, currentAnchor.index, true)} />\n                }\n                <TypeIcon\n                    icon={faVectorSquare}\n                    color={!anchor.bezier ? 'black' : 'rgb(181, 181, 181)'}\n                    onClick={() => this.onChangeAnchorType(onChangeProp, current.anchors, currentAnchor.index)} />\n            </Row>\n            <PanelButton onClick={onRemoveCurrentAnchor}>\n                Удалить опорную точку\n            </PanelButton>\n        </Panel>;\n    }\n\n    render() {\n        return <AnchorsEditableContext.Consumer>\n            { ({ currentAnchor, onRemoveCurrentAnchor }) =>\n                <CurrentContext.Consumer>\n                    { ({ current, onChangeProp }) =>\n                        currentAnchor && this.renderPanel(currentAnchor, onRemoveCurrentAnchor, current, onChangeProp)\n                    }\n                </CurrentContext.Consumer>\n            }\n        </AnchorsEditableContext.Consumer>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport BackgroundPanel from './BackgroundPanel';\nimport SizePanel from './SizePanel';\nimport RemovePanel from './RemovePanel';\nimport ColorPanel from './ColorPanel';\nimport OrderPanel from './OrderPanel';\nimport TextPanel from './TextPanel';\nimport ImagePanel from './ImagePanel';\nimport OverlayPanel from './OverlayPanel';\nimport LinkPanel from './LinkPanel';\nimport AnchorsPanel from './AnchorsPanel';\nimport AnchorPanel from './AnchorPanel';\n\nconst PANELS = {\n    text: [SizePanel, TextPanel, ColorPanel, OverlayPanel, OrderPanel, RemovePanel],\n    rect: [SizePanel, ColorPanel, OverlayPanel, OrderPanel, RemovePanel],\n    circle: [SizePanel, ColorPanel, OverlayPanel, OrderPanel, RemovePanel],\n    curve: [SizePanel, ColorPanel, AnchorsPanel, AnchorPanel, OverlayPanel, OrderPanel, RemovePanel],\n    image: [SizePanel, ImagePanel, OverlayPanel, OrderPanel, RemovePanel],\n    qr: [SizePanel, ColorPanel, LinkPanel, OrderPanel, RemovePanel]\n};\n\nexport default class SettingsPanel extends Component {\n    static propTypes = {\n        type: PropTypes.string\n    };\n\n    getPanels = () => {\n        const { type } = this.props;\n\n        return PANELS[type] || [BackgroundPanel];\n    }\n\n    render() {\n        const { type } = this.props;\n\n        return <div>\n            { this.getPanels().map((Panel, index) => <Panel key={`panel-${index}`} type={type} />) }\n        </div>;\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { find, propEq, pathOr, path, findIndex, update, remove, prop, assoc, contains } from 'ramda';\nimport uniqid from 'uniqid';\n\nimport Toolbar from './Toolbar';\nimport Canvas from './Canvas';\nimport SettingsPanel from './settings/SettingsPanel';\nimport { DEFAULT_SETTINGS, WIDTH, HEIGHT } from '../constants/settings';\nimport CurrentContext from './context/CurrentContext';\nimport OrderContext from './context/OrderContext';\nimport AnchorsEditableContext from './context/AnchorsEditableContext';\n\nconst Container = styled.div`\n    * {\n        box-sizing: border-box;\n    }\n    font-family: 'Lucida Grande', sans-serif;\n    display: flex;\n`;\n\nconst CanvasWrapper = styled.div`\n    margin-right: 15px;\n    border: 1px solid #eee;\n    width: ${prop('width')}px;\n    height: ${prop('height')}px;\n    overflow: hidden;\n`;\n\nexport default class Designer extends Component {\n    static propTypes = {\n        width: PropTypes.number,\n        height: PropTypes.number,\n        data: PropTypes.shape({\n            elements: PropTypes.arrayOf(PropTypes.object),\n            settings: PropTypes.object\n        })\n    };\n\n    static defaultProps = {\n        data: {},\n        width: WIDTH,\n        height: HEIGHT\n    };\n\n    state = {\n        selectedType: null,\n        current: null,\n        anchorsEditable: false,\n        currentAnchor: null\n    };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.onKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.onKeyDown);\n    }\n\n    onKeyDown = e => {\n        const { current, currentAnchor } = this.state;\n\n        if (contains(e.target.tagName, ['TEXTAREA', 'INPUT'])) {\n            return;\n        }\n\n        switch (e.keyCode) {\n            case 8:\n                if (currentAnchor) {\n                    this.onRemoveCurrentAnchor();\n                } else if (current) {\n                    this.onRemoveCurrent();\n                }\n                break;\n            case 37:\n                this.moveCurrentToX(e, true);\n                break;\n            case 38:\n                this.moveCurrentToY(e, true);\n                break;\n            case 39:\n                this.moveCurrentToX(e);\n                break;\n            case 40:\n                this.moveCurrentToY(e);\n                break;\n            default:\n        }\n    }\n\n    moveCurrentToX = (e, left) => {\n        e.preventDefault();\n        const current = this.getCurrentElement();\n        const x = current.x + (left ? -1 : 1);\n\n\n        this.onChangeCurrentElement({\n            ...current,\n            x,\n            ...(current.anchors ?\n                { anchors: current.anchors.map(a => assoc('x', a.x + (left ? -1 : 1), a)) } :\n                {}\n            )\n        });\n    }\n\n    moveCurrentToY = (e, top) => {\n        e.preventDefault();\n        const current = this.getCurrentElement();\n        const y = current.y + (top ? -1 : 1);\n\n        this.onChangeCurrentElement({\n            ...current,\n            y,\n            ...(current.anchors ?\n                { anchors: current.anchors.map(a => assoc('y', a.y + (top ? -1 : 1), a)) } :\n                {}\n            )\n        });\n    }\n\n    onSelectType = selectedType => this.setState({\n        selectedType,\n        current: null,\n        anchorsEditable: false,\n        currentAnchor: null\n    });\n\n    onChangeCurrent = current => this.setState(prev => {\n        const allowResetAnchors = current && prev.current === current;\n\n        return {\n            current,\n            anchorsEditable: allowResetAnchors ? prev.anchorsEditable : false,\n            currentAnchor: allowResetAnchors ? prev.currentAnchor : null\n        };\n    });\n\n    onChangeAnchorsEditable = anchorsEditable => this.setState({ anchorsEditable });\n\n    getElements = () => {\n        return pathOr([], ['data', 'elements'], this.props);\n    }\n\n    getSettings = () => {\n        return pathOr({}, ['data', 'settings'], this.props);\n    }\n\n    getCurrentElement = () => {\n        const { current } = this.state;\n\n        return find(propEq('name', current), this.getElements());\n    }\n\n    onChangeElements = elements => {\n        const { onChange, data } = this.props;\n\n        onChange({ ...data, elements });\n    }\n\n    onChangeSettings = settings => {\n        const { onChange, data } = this.props;\n\n        onChange({ ...data, settings });\n    }\n\n    onAddElement = (x, y) => {\n        const { selectedType } = this.state;\n        const name = uniqid();\n        const defaultSettings = DEFAULT_SETTINGS[selectedType];\n\n        this.onChangeElements([\n            ...this.getElements(),\n            {\n                ...defaultSettings,\n                name,\n                x,\n                y,\n                ...(defaultSettings.anchors ? { anchors: [{ x, y, bezier: false }] } : {})\n            }\n        ]);\n        this.setState({\n            selectedType: null,\n            current: name,\n            anchorsEditable: !!defaultSettings.anchors,\n            currentAnchor: defaultSettings.anchors ? { name, index: 0 } : null\n        });\n    }\n\n    onChangeCurrentElement = element => {\n        const elements = this.getElements();\n\n        this.onChangeElements(\n            update(findIndex(propEq('name', element.name), elements), element, elements)\n        );\n    }\n\n    onChangeCurrentProp = (prop, value) => {\n        const element = {\n            ...this.getCurrentElement(),\n            [prop]: value\n        };\n\n        this.onChangeCurrentElement(element);\n    }\n\n    onChangeSettingsProp = (prop, value) => {\n        const settings = {\n            ...this.getSettings(),\n            [prop]: value\n        };\n\n        this.onChangeSettings(settings);\n    }\n\n    onRemoveCurrent = () => {\n        const { current } = this.state;\n        const elements = this.getElements();\n\n        this.onChangeElements(\n            remove(findIndex(propEq('name', current), elements), 1, elements)\n        );\n        this.setState({ current: null, anchorsEditable: false, currentAnchor: null });\n    }\n\n    onChangeOrder = (back, once) => {\n        const { current } = this.state;\n        const elements = this.getElements();\n        const startIndex = findIndex(propEq('name', current), elements);\n        const endIndex = once ?\n            (back ?\n                (startIndex - 1 < 0 ? 0 : startIndex - 1) :\n                (startIndex + 1 > elements.length ? elements.length : startIndex + 1)\n            ) :\n            (back ? 0 : elements.length);\n        const result = Array.from(elements);\n        const [ removed ] = result.splice(startIndex, 1);\n\n        result.splice(endIndex, 0, removed);\n\n        this.onChangeElements(result);\n    }\n\n    onAddAnchor = (x, y) => {\n        const current = this.getCurrentElement();\n        const anchors = [...current.anchors, { x, y, bezier: false }];\n\n        this.onChangeCurrentProp('anchors', anchors);\n        this.setState({ currentAnchor:\n            { name: current.name, index: anchors.length - 1 }\n        });\n    }\n\n    onChangeCurrentAnchor = (name, index) => this.setState({\n        currentAnchor: { name, index }\n    });\n\n    onRemoveCurrentAnchor = () => {\n        const { currentAnchor } = this.state;\n        const current = this.getCurrentElement();\n\n        this.setState({ currentAnchor: null });\n        this.onChangeCurrentProp('anchors', remove(currentAnchor.index, 1, current.anchors));\n    }\n\n    render() {\n        const { width, height } = this.props;\n        const { selectedType, anchorsEditable, currentAnchor } = this.state;\n        const elements = this.getElements();\n        const currentElement = this.getCurrentElement();\n\n        return <CurrentContext.Provider value={{\n            current: currentElement,\n            onChangeProp: this.onChangeCurrentProp,\n            onChange: this.onChangeCurrentElement,\n            onRemove: this.onRemoveCurrent,\n            settings: this.getSettings(),\n            onChangeSettingsProp: this.onChangeSettingsProp,\n            onChangeSettings: this.onChangeSettings\n        }}>\n            <OrderContext.Provider value={{\n                onChangeOrder: this.onChangeOrder\n            }}>\n                <Container>\n                    <Toolbar\n                        selected={selectedType}\n                        onSelect={this.onSelectType} />\n                    <CanvasWrapper width={width} height={height}>\n                        <Canvas\n                            elements={elements}\n                            current={currentElement}\n                            onChangeCurrentElement={this.onChangeCurrentElement}\n                            onChangeCurrentProp={this.onChangeCurrentProp}\n                            selectedType={selectedType}\n                            onChangeCurrent={this.onChangeCurrent}\n                            onAddElement={this.onAddElement}\n                            onAddAnchor={this.onAddAnchor}\n                            onChangeCurrentAnchor={this.onChangeCurrentAnchor}\n                            currentAnchor={currentAnchor}\n                            width={width}\n                            height={height}\n                            settings={this.getSettings()}\n                            anchorsEditable={anchorsEditable} />\n                    </CanvasWrapper>\n                    <AnchorsEditableContext.Provider value={{\n                        editable: anchorsEditable,\n                        onChangeEditable: this.onChangeAnchorsEditable,\n                        onRemoveCurrentAnchor: this.onRemoveCurrentAnchor,\n                        currentAnchor\n                    }}>\n                        <SettingsPanel type={path(['type'], currentElement)} />\n                    </AnchorsEditableContext.Provider>\n                </Container>\n            </OrderContext.Provider>\n        </CurrentContext.Provider>;\n    }\n}\n","import Designer from './components/Designer';\n\nexport default Designer;\n","import React, { Component } from 'react';\n\nimport Designer from './designer';\n\nexport default class App extends Component {\n    state = {\n        data: {}\n    };\n\n    onChange = data => this.setState({ data });\n\n    render() {\n        return <Designer data={this.state.data} onChange={this.onChange} />;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}